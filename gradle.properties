# Project-wide Gradle settings.

# IDE (e.g. Android Studio) users:
# Gradle settings configured through the IDE *will override*
# any settings specified in this file.

# For more details on how to configure your build environment visit
# http://www.gradle.org/docs/current/userguide/build_environment.html

# Specifies the JVM arguments used for the daemon process.
# The setting is particularly useful for tweaking memory settings.
# Default value: -Xmx10248m -XX:MaxPermSize=256m
# org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
org.gradle.jvmargs=-Xmx8g -XX:MaxMetaspaceSize=512m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8
org.gradle.daemon=true
org.gradle.parallel=ture
#linuxϵͳ�����޸�
#org.gradle.jvmargs=-Xmx4608m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8 -XX:HeapDumpPath=/data/logs/HeadDumpOutMemory.log
# When configured, Gradle will run in incubating parallel mode.
# This option should only be used with decoupled projects. More details, visit
# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects

#Builds may fail while AAPT2 is enabled. Additionally, AAPT2 is currently not compatible with Robelectric. If your build fails due to an AAPT2 resource processing issue or you want to use Roboelectric, you can disable AAPT2 by setting android.enableAapt2=false in your gradle.properties file and restarting the Gradle daemon by running ./gradlew --stop from the command line.
#android.enableAapt2=true
#android.useDexArchive=true

android.enableJetifier=true
android.useAndroidX=true
android.enableR8.fullMode=false
android.nonTransitiveRClass=false

#然而问题就出在上传Mapping文件到Google服务器这一步，这里你就必须要科学上网了。
#然而当你开启科学上网的软件后，如果不在项目中设置相应的代理信息，编译还是会出错，所以我们还需要在项目的gradle.properties中进行相应的设置：
#proxyHost：代理的主机的地址，如果是你自己电脑开的科学上网软件，那么可以填写127.0.0.1；
#proxyPort：代理的端口地址，一般你的科学上网软件开启之后你可以去软件的设置中查看下它的代理端口是多少然后填写到这里就可以了；
#systemProp.https.proxyHost=127.0.0.1
#systemProp.https.proxyPort=53945